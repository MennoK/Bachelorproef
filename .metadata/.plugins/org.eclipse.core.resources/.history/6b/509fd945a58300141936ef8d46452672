import java.util.Arrays;

import org.apache.commons.lang3.StringUtils;

import weka.classifiers.Classifier;
import weka.classifiers.trees.J48;

/**
 * Alle methodes met verschillende opties opgesomd in een 'enum'
 */
public enum Method {
	
	/**
	 * J48: default = pruned met confidence factor 0.25, min. 2 obj. per blad
	 */
	J48_1("-C 0.25 -M 2"),
	
	/**
	 * J48: hogere confidence factor: 0.2 (http://ww.samdrazin.com/classes/een548/project2report.pdf, figuur 4), min. 2 obj. per blad
	 */
	J48_2A("-C 0.2 -M 2"),
	
	/**
	 * J48: hogere confidence factor: 0.5 (http://ww.samdrazin.com/classes/een548/project2report.pdf, figuur 4), min. 2 obj. per blad
	 */
	J48_2B("-C 0.5 -M 2"),
	
	/**
	 * J48: unpruned, min. 2 obj. per blad
	 */
	J48_3("-U -M 2");
	
	/**
	 * Opties voor de methode
	 */
	public final String[] options;

	Method(String options) {
		String[] optionsArray = null;
		try {
			optionsArray = weka.core.Utils.splitOptions(options);
		} catch (Exception e) {
			System.out.println("Probleem met het parsen van de opties");
			optionsArray = null;
		}
		this.options = optionsArray;
	}
	
	/**
	 * Geef de naam van de methode terug.
	 * Voorbeeld: J48_2.getName() = "J48"
	 */
	public String getName() {
		String name = this.name();
		return StringUtils.substringBefore(name, "_");
	}
	
	public Classifier getClassifier() {
		Classifier classifier = null;
		try {
			classifier = classifier(this.getName());
			// stel de opties in
			//  System.out.print("Opties instellen: ");
			//  System.out.println(StringUtils.join(this.options, ","));
			classifier.setOptions(Arrays.copyOf(this.options, this.options.length));
		}
		catch (Exception e) {
			System.out.println("Fout met het maken van de classifier van "+this.name());
		}
		return classifier;
	}
	
	private static Classifier classifier(String name) {
		switch (name) {
			case "J48":
				return new J48();
		}
		System.out.println("Classifier "+name+" kon niet aangemaakt worden. Nog toevoegen bij methode classifier in Method.java?");
		return null;
	}
	
}
